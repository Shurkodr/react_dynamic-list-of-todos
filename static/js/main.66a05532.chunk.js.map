{"version":3,"sources":["todoWithUsers.js","components/User.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["todoWithUsers","todos","users","todoWithUsersArray","Array","from","_loop","i","user","find","id","userId","length","User","props","_props$user","name","email","react_default","a","createElement","href","concat","TodoItem","_props$todo","todo","title","isCompleted","completed","components_User","TodoList","border","Fragment","map","components_TodoItem","key","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","fullTodos","LoadingData","bind","assertThisInitialized","titleSort","userSort","completeSort","setState","fetch","response","json","sort","b","_this$state","onClick","type","components_TodoList","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.66a05532.chunk.js","sourcesContent":["function todoWithUsers(todos, users) {\n  const todoWithUsersArray = Array.from(todos);\n\n  for (let i = 0; i < todoWithUsersArray.length; i += 1) {\n    todoWithUsersArray[i].user = users.find(\n      user => user.id === todoWithUsersArray[i].userId\n    );\n  }\n\n  return todoWithUsersArray;\n}\n\nexport default todoWithUsers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction User(props) {\n  const { name, email } = props.user;\n\n  return (\n    <td><a href={`mailto:${email}`}>{name}</a></td>\n  );\n}\n\nUser.propTypes = {\n  user: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nfunction TodoItem(props) {\n  const { title, completed: isCompleted, user } = props.todo;\n\n  return (\n    <tr>\n      <td>{title}</td>\n      <User user={user} />\n      <td>{`${isCompleted}`}</td>\n    </tr>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nfunction TodoList(props) {\n  return (\n    <table border={1}>\n      <thead>\n        <tr>\n          <td>Title</td>\n          <td>\n            User Name\n          </td>\n          <td>\n            IS Completed ?\n          </td>\n        </tr>\n      </thead>\n      <tbody>\n        <>\n          {\n            props.todos.map(todo => (\n              <TodoItem key={todo.id} todo={todo} />\n            ))\n          }\n        </>\n\n      </tbody>\n    </table>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default TodoList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport todoWithUsers from './todoWithUsers';\nimport TodoList from './components/TodoList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      users: null,\n      todos: null,\n      fullTodos: null,\n    };\n    this.LoadingData = this.LoadingData.bind(this);\n    this.titleSort = this.titleSort.bind(this);\n    this.userSort = this.userSort.bind(this);\n    this.completeSort = this.completeSort.bind(this);\n  }\n\n  async LoadingData() {\n    this.setState({ isLoading: true });\n    let response = await fetch('https://jsonplaceholder.typicode.com/todos');\n    const todos = await response.json();\n    response = await fetch('https://jsonplaceholder.typicode.com/users');\n    const users = await response.json();\n    const fullTodos = todoWithUsers(todos, users);\n    this.setState({ todos, users, fullTodos });\n  }\n\n  titleSort() {\n    const { fullTodos } = this.state;\n\n    fullTodos.sort((a, b) => (a.title < b.title ? -1 : 1));\n    this.setState({ fullTodos });\n  }\n\n  userSort() {\n    const { fullTodos } = this.state;\n\n    fullTodos.sort((a, b) => (a.user.id - b.user.id));\n    this.setState({ fullTodos });\n  }\n\n  completeSort() {\n    const { fullTodos } = this.state;\n\n    fullTodos.sort(a => (a.completed ? -1 : 1));\n    this.setState({ fullTodos });\n  }\n\n  render() {\n    const {\n      users, todos, isLoading, fullTodos,\n    } = this.state;\n\n    if (users === null || todos === null) {\n      if (isLoading === true) {\n        return (<span>Is Loading</span>);\n      }\n      return (\n        <button onClick={this.LoadingData} type=\"button\">\n          Жмакни меня полностью!!!!\n        </button>\n      );\n    }\n    return (\n      <>\n        <span>Sort by : </span>\n        <button type=\"button\" onClick={this.titleSort}>Title</button>\n        <button type=\"button\" onClick={this.userSort}>User</button>\n        <button type=\"button\" onClick={this.completeSort}>Completed</button>\n\n        <TodoList todos={fullTodos} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}